<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silence.mapper.extend.FixDeviceMapperExtend" >
  <resultMap id="BaseResultMap" type="com.silence.po.FixDevice" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fixer" property="fixer" jdbcType="VARCHAR" />
    <result column="d_id" property="d_id" jdbcType="INTEGER" />
    <result column="fix_time" property="fix_time" jdbcType="TIMESTAMP" />
    <result column="fix_mark" property="fix_mark" jdbcType="VARCHAR" />
    <result column="is_fixed" property="is_fixed" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, fixer, d_id, fix_time, fix_mark, is_fixed
  </sql>

  <select id="selectFixDeviceList" resultMap="BaseResultMap" parameterType="com.silence.vo.UserQueryVo">
    select
    <include refid="Base_Column_List" />
    from fix_device
    <where>
      <if test="map.fixer != null and map.fixer != ''">
        fixer LIKE '%${map.fixer}%'
      </if>
      <if test="map.d_id != null and map.d_id != ''">
        d_id LIKE '%${map.d_id}%'
      </if>

      <if test="map.fix_time_from != null and map.fix_time_from != ''">
        AND fix_time >= #{map.fix_time_from}
      </if>
      <if test="map.fix_time_to != null and map.fix_time_to != ''">
        AND #{map.fix_time_to} >= fix_time
      </if>
    </where>
    ORDER BY ${pageable.sort} ${pageable.order}

    limit #{pageable.page,jdbcType=INTEGER},#{pageable.rows,jdbcType=INTEGER}
  </select>

  <select id="selectAllFixDeviceListSize" resultType="java.lang.Integer" parameterType="com.silence.vo.UserQueryVo">
    select
    COUNT(*)
    from fix_device
    <where>
      <if test="map.fixer != null and map.fixer != ''">
        fixer LIKE '%${map.fixer}%'
      </if>
      <if test="map.d_id != null and map.d_id != ''">
        d_id LIKE '%${map.d_id}%'
      </if>

      <if test="map.fix_time_from != null and map.fix_time_from != ''">
        AND fix_time >= #{map.fix_time_from}
      </if>
      <if test="map.fix_time_to != null and map.fix_time_to != ''">
        AND #{map.fix_time_to} >= fix_time
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fix_device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fix_device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.silence.po.FixDevice" >
    insert into fix_device (id, fixer, d_id, 
      fix_time, fix_mark, is_fixed
      )
    values (#{id,jdbcType=INTEGER}, #{fixer,jdbcType=VARCHAR}, #{d_id,jdbcType=INTEGER}, 
      #{fix_time,jdbcType=TIMESTAMP}, #{fix_mark,jdbcType=VARCHAR}, #{is_fixed,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.silence.po.FixDevice" >
    insert into fix_device
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fixer != null" >
        fixer,
      </if>
      <if test="d_id != null" >
        d_id,
      </if>
      <if test="fix_time != null" >
        fix_time,
      </if>
      <if test="fix_mark != null" >
        fix_mark,
      </if>
      <if test="is_fixed != null" >
        is_fixed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fixer != null" >
        #{fixer,jdbcType=VARCHAR},
      </if>
      <if test="d_id != null" >
        #{d_id,jdbcType=INTEGER},
      </if>
      <if test="fix_time != null" >
        #{fix_time,jdbcType=TIMESTAMP},
      </if>
      <if test="fix_mark != null" >
        #{fix_mark,jdbcType=VARCHAR},
      </if>
      <if test="is_fixed != null" >
        #{is_fixed,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.silence.po.FixDevice" >
    update fix_device
    <set >
      <if test="fixer != null" >
        fixer = #{fixer,jdbcType=VARCHAR},
      </if>
      <if test="d_id != null" >
        d_id = #{d_id,jdbcType=INTEGER},
      </if>
      <if test="fix_time != null" >
        fix_time = #{fix_time,jdbcType=TIMESTAMP},
      </if>
      <if test="fix_mark != null" >
        fix_mark = #{fix_mark,jdbcType=VARCHAR},
      </if>
      <if test="is_fixed != null" >
        is_fixed = #{is_fixed,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.silence.po.FixDevice" >
    update fix_device
    set fixer = #{fixer,jdbcType=VARCHAR},
      d_id = #{d_id,jdbcType=INTEGER},
      fix_time = #{fix_time,jdbcType=TIMESTAMP},
      fix_mark = #{fix_mark,jdbcType=VARCHAR},
      is_fixed = #{is_fixed,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>