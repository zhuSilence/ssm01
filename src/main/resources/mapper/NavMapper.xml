<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.silence.mapper.extend.NavMapperExtend" >
  <resultMap id="BaseResultMap" type="com.silence.po.Nav" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="iconCls" property="iconCls" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="nid" property="nid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, text, state, iconCls, url, nid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from nav
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findAllNavsByNid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from nav
    where nid = #{id,jdbcType=INTEGER}
  </select>

  <select id="findNavIds" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from nav
  </select>

  <select id="findNavList" resultMap="BaseResultMap" parameterType="com.silence.vo.UserQueryVo">
    select
    <include refid="Base_Column_List" />
    from nav
    <where>
      <if test="map.text != null and map.text != ''">
        text LIKE '%${map.text}%'
      </if>
      <if test="map.state != null and map.state != ''">
        AND state LIKE #{map.state}
      </if>
    </where>
    ORDER BY ${pageable.sort} ${pageable.order}

    limit #{pageable.page,jdbcType=INTEGER},#{pageable.rows,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from nav
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.silence.po.Nav" >
    insert into nav (id, text, state, 
      iconCls, url, nid)
    values (#{id,jdbcType=INTEGER}, #{text,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{iconCls,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{nid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.silence.po.Nav" >
    insert into nav
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="iconCls != null" >
        iconCls,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="nid != null" >
        nid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="nid != null" >
        #{nid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.silence.po.Nav" >
    update nav
    <set >
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        iconCls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="nid != null" >
        nid = #{nid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.silence.po.Nav" >
    update nav
    set text = #{text,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      iconCls = #{iconCls,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      nid = #{nid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>